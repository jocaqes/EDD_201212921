//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.NavalWarsWS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Persona", Namespace="http://schemas.datacontract.org/2004/07/WSproyecto1.Objetos")]
    [System.SerializableAttribute()]
    public partial class Persona : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool conectadoField;
        
        private string mailField;
        
        private string passwordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool conectado {
            get {
                return this.conectadoField;
            }
            set {
                if ((this.conectadoField.Equals(value) != true)) {
                    this.conectadoField = value;
                    this.RaisePropertyChanged("conectado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string mail {
            get {
                return this.mailField;
            }
            set {
                if ((object.ReferenceEquals(this.mailField, value) != true)) {
                    this.mailField = value;
                    this.RaisePropertyChanged("mail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArbolBinario", Namespace="http://schemas.datacontract.org/2004/07/WSproyecto1.Arbol")]
    [System.SerializableAttribute()]
    public partial class ArbolBinario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int countField;
        
        private WebApplication1.NavalWarsWS.Nodo raizField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int count {
            get {
                return this.countField;
            }
            set {
                if ((this.countField.Equals(value) != true)) {
                    this.countField = value;
                    this.RaisePropertyChanged("count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public WebApplication1.NavalWarsWS.Nodo raiz {
            get {
                return this.raizField;
            }
            set {
                if ((object.ReferenceEquals(this.raizField, value) != true)) {
                    this.raizField = value;
                    this.RaisePropertyChanged("raiz");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Nodo", Namespace="http://schemas.datacontract.org/2004/07/WSproyecto1.Nodos")]
    [System.SerializableAttribute()]
    public partial class Nodo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private WebApplication1.NavalWarsWS.Nodo derField;
        
        private WebApplication1.NavalWarsWS.Persona itemField;
        
        private WebApplication1.NavalWarsWS.Nodo izqField;
        
        private string keyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public WebApplication1.NavalWarsWS.Nodo der {
            get {
                return this.derField;
            }
            set {
                if ((object.ReferenceEquals(this.derField, value) != true)) {
                    this.derField = value;
                    this.RaisePropertyChanged("der");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public WebApplication1.NavalWarsWS.Persona item {
            get {
                return this.itemField;
            }
            set {
                if ((object.ReferenceEquals(this.itemField, value) != true)) {
                    this.itemField = value;
                    this.RaisePropertyChanged("item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public WebApplication1.NavalWarsWS.Nodo izq {
            get {
                return this.izqField;
            }
            set {
                if ((object.ReferenceEquals(this.izqField, value) != true)) {
                    this.izqField = value;
                    this.RaisePropertyChanged("izq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                if ((object.ReferenceEquals(this.keyField, value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NavalWarsWS.INavalWarsService")]
    public interface INavalWarsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/newPersona", ReplyAction="http://tempuri.org/INavalWarsService/newPersonaResponse")]
        WebApplication1.NavalWarsWS.Persona newPersona(string password, string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/newPersona", ReplyAction="http://tempuri.org/INavalWarsService/newPersonaResponse")]
        System.Threading.Tasks.Task<WebApplication1.NavalWarsWS.Persona> newPersonaAsync(string password, string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/newArbolBinario", ReplyAction="http://tempuri.org/INavalWarsService/newArbolBinarioResponse")]
        WebApplication1.NavalWarsWS.ArbolBinario newArbolBinario();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/newArbolBinario", ReplyAction="http://tempuri.org/INavalWarsService/newArbolBinarioResponse")]
        System.Threading.Tasks.Task<WebApplication1.NavalWarsWS.ArbolBinario> newArbolBinarioAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/isEmpty", ReplyAction="http://tempuri.org/INavalWarsService/isEmptyResponse")]
        bool isEmpty(WebApplication1.NavalWarsWS.ArbolBinario arbol_binario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/isEmpty", ReplyAction="http://tempuri.org/INavalWarsService/isEmptyResponse")]
        System.Threading.Tasks.Task<bool> isEmptyAsync(WebApplication1.NavalWarsWS.ArbolBinario arbol_binario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/insertar", ReplyAction="http://tempuri.org/INavalWarsService/insertarResponse")]
        WebApplication1.NavalWarsWS.ArbolBinario insertar(string nick, WebApplication1.NavalWarsWS.Persona persona, WebApplication1.NavalWarsWS.ArbolBinario arbol_binario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/insertar", ReplyAction="http://tempuri.org/INavalWarsService/insertarResponse")]
        System.Threading.Tasks.Task<WebApplication1.NavalWarsWS.ArbolBinario> insertarAsync(string nick, WebApplication1.NavalWarsWS.Persona persona, WebApplication1.NavalWarsWS.ArbolBinario arbol_binario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/buscar", ReplyAction="http://tempuri.org/INavalWarsService/buscarResponse")]
        WebApplication1.NavalWarsWS.Nodo buscar(string nick, WebApplication1.NavalWarsWS.ArbolBinario arbol_binario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/buscar", ReplyAction="http://tempuri.org/INavalWarsService/buscarResponse")]
        System.Threading.Tasks.Task<WebApplication1.NavalWarsWS.Nodo> buscarAsync(string nick, WebApplication1.NavalWarsWS.ArbolBinario arbol_binario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/eliminar", ReplyAction="http://tempuri.org/INavalWarsService/eliminarResponse")]
        WebApplication1.NavalWarsWS.ArbolBinario eliminar(string nick, WebApplication1.NavalWarsWS.ArbolBinario arbol_binario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/eliminar", ReplyAction="http://tempuri.org/INavalWarsService/eliminarResponse")]
        System.Threading.Tasks.Task<WebApplication1.NavalWarsWS.ArbolBinario> eliminarAsync(string nick, WebApplication1.NavalWarsWS.ArbolBinario arbol_binario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/modificar", ReplyAction="http://tempuri.org/INavalWarsService/modificarResponse")]
        WebApplication1.NavalWarsWS.ArbolBinario modificar(string nick, WebApplication1.NavalWarsWS.Persona persona, WebApplication1.NavalWarsWS.ArbolBinario arbol_binario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/modificar", ReplyAction="http://tempuri.org/INavalWarsService/modificarResponse")]
        System.Threading.Tasks.Task<WebApplication1.NavalWarsWS.ArbolBinario> modificarAsync(string nick, WebApplication1.NavalWarsWS.Persona persona, WebApplication1.NavalWarsWS.ArbolBinario arbol_binario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/graficarArbolBinario", ReplyAction="http://tempuri.org/INavalWarsService/graficarArbolBinarioResponse")]
        bool graficarArbolBinario(WebApplication1.NavalWarsWS.ArbolBinario arbol_binario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/graficarArbolBinario", ReplyAction="http://tempuri.org/INavalWarsService/graficarArbolBinarioResponse")]
        System.Threading.Tasks.Task<bool> graficarArbolBinarioAsync(WebApplication1.NavalWarsWS.ArbolBinario arbol_binario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/cargaUsuarios", ReplyAction="http://tempuri.org/INavalWarsService/cargaUsuariosResponse")]
        WebApplication1.NavalWarsWS.ArbolBinario cargaUsuarios(string direccion, WebApplication1.NavalWarsWS.ArbolBinario arbol_usuarios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INavalWarsService/cargaUsuarios", ReplyAction="http://tempuri.org/INavalWarsService/cargaUsuariosResponse")]
        System.Threading.Tasks.Task<WebApplication1.NavalWarsWS.ArbolBinario> cargaUsuariosAsync(string direccion, WebApplication1.NavalWarsWS.ArbolBinario arbol_usuarios);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INavalWarsServiceChannel : WebApplication1.NavalWarsWS.INavalWarsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NavalWarsServiceClient : System.ServiceModel.ClientBase<WebApplication1.NavalWarsWS.INavalWarsService>, WebApplication1.NavalWarsWS.INavalWarsService {
        
        public NavalWarsServiceClient() {
        }
        
        public NavalWarsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NavalWarsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NavalWarsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NavalWarsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebApplication1.NavalWarsWS.Persona newPersona(string password, string mail) {
            return base.Channel.newPersona(password, mail);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.NavalWarsWS.Persona> newPersonaAsync(string password, string mail) {
            return base.Channel.newPersonaAsync(password, mail);
        }
        
        public WebApplication1.NavalWarsWS.ArbolBinario newArbolBinario() {
            return base.Channel.newArbolBinario();
        }
        
        public System.Threading.Tasks.Task<WebApplication1.NavalWarsWS.ArbolBinario> newArbolBinarioAsync() {
            return base.Channel.newArbolBinarioAsync();
        }
        
        public bool isEmpty(WebApplication1.NavalWarsWS.ArbolBinario arbol_binario) {
            return base.Channel.isEmpty(arbol_binario);
        }
        
        public System.Threading.Tasks.Task<bool> isEmptyAsync(WebApplication1.NavalWarsWS.ArbolBinario arbol_binario) {
            return base.Channel.isEmptyAsync(arbol_binario);
        }
        
        public WebApplication1.NavalWarsWS.ArbolBinario insertar(string nick, WebApplication1.NavalWarsWS.Persona persona, WebApplication1.NavalWarsWS.ArbolBinario arbol_binario) {
            return base.Channel.insertar(nick, persona, arbol_binario);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.NavalWarsWS.ArbolBinario> insertarAsync(string nick, WebApplication1.NavalWarsWS.Persona persona, WebApplication1.NavalWarsWS.ArbolBinario arbol_binario) {
            return base.Channel.insertarAsync(nick, persona, arbol_binario);
        }
        
        public WebApplication1.NavalWarsWS.Nodo buscar(string nick, WebApplication1.NavalWarsWS.ArbolBinario arbol_binario) {
            return base.Channel.buscar(nick, arbol_binario);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.NavalWarsWS.Nodo> buscarAsync(string nick, WebApplication1.NavalWarsWS.ArbolBinario arbol_binario) {
            return base.Channel.buscarAsync(nick, arbol_binario);
        }
        
        public WebApplication1.NavalWarsWS.ArbolBinario eliminar(string nick, WebApplication1.NavalWarsWS.ArbolBinario arbol_binario) {
            return base.Channel.eliminar(nick, arbol_binario);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.NavalWarsWS.ArbolBinario> eliminarAsync(string nick, WebApplication1.NavalWarsWS.ArbolBinario arbol_binario) {
            return base.Channel.eliminarAsync(nick, arbol_binario);
        }
        
        public WebApplication1.NavalWarsWS.ArbolBinario modificar(string nick, WebApplication1.NavalWarsWS.Persona persona, WebApplication1.NavalWarsWS.ArbolBinario arbol_binario) {
            return base.Channel.modificar(nick, persona, arbol_binario);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.NavalWarsWS.ArbolBinario> modificarAsync(string nick, WebApplication1.NavalWarsWS.Persona persona, WebApplication1.NavalWarsWS.ArbolBinario arbol_binario) {
            return base.Channel.modificarAsync(nick, persona, arbol_binario);
        }
        
        public bool graficarArbolBinario(WebApplication1.NavalWarsWS.ArbolBinario arbol_binario) {
            return base.Channel.graficarArbolBinario(arbol_binario);
        }
        
        public System.Threading.Tasks.Task<bool> graficarArbolBinarioAsync(WebApplication1.NavalWarsWS.ArbolBinario arbol_binario) {
            return base.Channel.graficarArbolBinarioAsync(arbol_binario);
        }
        
        public WebApplication1.NavalWarsWS.ArbolBinario cargaUsuarios(string direccion, WebApplication1.NavalWarsWS.ArbolBinario arbol_usuarios) {
            return base.Channel.cargaUsuarios(direccion, arbol_usuarios);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.NavalWarsWS.ArbolBinario> cargaUsuariosAsync(string direccion, WebApplication1.NavalWarsWS.ArbolBinario arbol_usuarios) {
            return base.Channel.cargaUsuariosAsync(direccion, arbol_usuarios);
        }
    }
}
